{
    "schemes": [
        "https",
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "An API for uploading and serving files.",
        "title": "uploads-svc",
        "contact": {
            "name": "Sam Komarov",
            "url": "github.com/k0marov",
            "email": "sam@skomarov.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/uploads/": {
            "post": {
                "description": "Upload a file by including it in a multipart request's \"file\" field.\nBefore saving on the server, a random name is generated, but file extension is preserved.\nEndpoint returns a single string: full URL from which the file can be downloaded.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "uploads"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File that you want to upload. Size limits are defined in config",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "URL from which you can download the uploaded file.",
                        "schema": {
                            "$ref": "#/definitions/internal.UploadedResponse"
                        }
                    },
                    "413": {
                        "description": "When uploaded image exceeds max size limit.",
                        "schema": {
                            "$ref": "#/definitions/internal.ClientError"
                        }
                    }
                }
            }
        },
        "/uploads/{name}": {
            "get": {
                "description": "Serves a file by its name.\nGenerally, you wouldn't construct requests to this endpoint yourself,\nbecause full URLs are returned from the upload endpoint.",
                "tags": [
                    "uploads"
                ],
                "summary": "Serves a file by its name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filename to download",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "full file contents",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "definitions": {
        "internal.ClientError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "internal.UploadedResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "localhost:8080/api/v1/uploads/afc5a4eb-8dd1-4df0-a3c4-6c2703a3dcb7.png"
                }
            }
        }
    }
}